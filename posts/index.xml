<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 牧己</title><link>https://hugh-zhan9.github.io/posts/</link><description>Recent content in Posts on 牧己</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 06 May 2025 22:41:21 +0800</lastBuildDate><atom:link href="https://hugh-zhan9.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>2025 年个人周报</title><link>https://hugh-zhan9.github.io/posts/2025%E5%B9%B4%E4%B8%AA%E4%BA%BA%E5%91%A8%E6%8A%A5/</link><pubDate>Tue, 06 May 2025 22:41:21 +0800</pubDate><guid>https://hugh-zhan9.github.io/posts/2025%E5%B9%B4%E4%B8%AA%E4%BA%BA%E5%91%A8%E6%8A%A5/</guid><description>&lt;ul>
&lt;li>
&lt;h2 id="2025-年第-01周">2025 年第 01周&lt;/h2>
&lt;ul>
&lt;li>跑步 6 次，合计42 公里，其中有 12 公里算是因为是在 2024 年，所以也算在上一年的跑量吧。&lt;/li>
&lt;li>周六加了一天班，大家在公司聊了聊领导的领导，原来大家都因为双层领导的原因绝对身心俱疲。&lt;/li>
&lt;li>2025 继续加油吧！&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-02周">2025 年第 02周&lt;/h2>
&lt;ul>
&lt;li>本周降温比较严重，加上回家了一趟，跑步 3次，但是质量还可以，总共 23 公里。&lt;/li>
&lt;li>受折磨于股价提醒那个项目，代码结构很复杂，各种异步事件横飞，设计模式使用的也不是很清晰，加剧了代码的阅读困难，加上没有任何文档，导致排查起问题来很头疼。&lt;/li>
&lt;li>回了一趟老家，丈母娘生日，本以为会和另外一个侄子比较生疏，结果带了一天也还算比较容易融入。&lt;/li>
&lt;li>配老婆去医院做了检查，目前一切顺利！&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-03-周">2025 年第 03 周&lt;/h2>
&lt;ul>
&lt;li>本周感冒以及老婆住院等一系列原因，完全没有心思去跑步，明天都是一种处于焦虑和担心中，晚上睡觉基本上都会在凌晨两三点醒过来一两次。&lt;/li>
&lt;li>1 月 14 号那天，老婆计划中去看血 hcg 等数据，做了一个 B 超，有一些些褐色的痕迹，加上上一次怀孕的情况导致整个人都处于一种紧绷的状态，很担心出问题，于是安排了住院，在住院 3 天之后又做了一个抽血检查，情况良好之后出院。&lt;/li>
&lt;li>这一周都处于一个担忧的状态，在周五下午实在忍不住请假坐顺风车回了家，加上本身自己处于一个感冒的状态，很担心传染给老婆，所以基本上都是带着口罩，睡觉也是一样。&lt;/li>
&lt;li>周六老婆大哭了一顿，怀孕期间整个人都变得很敏感，情绪很奔溃，加上本身她就是一个较为敏感多愁善感的人，所以在孕期更加严重，想到我周末又要回长沙，已经她的妈妈不能照顾她就觉得很委屈，没有归属感。要更加的努力，早日能够和她一块在长沙安家。&lt;/li>
&lt;li>周天带老婆到医院做了一个抽血和 B 超，看到卵黄囊了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-04-周">2025 年第 04 周&lt;/h2>
&lt;ul>
&lt;li>本来周末已经出院的老婆，周一又因为一些出血选择了住院观察，导致整个人都是一种很丧的状态，加上咳嗽一直没有痊愈，已经年前请假提前回家。本周跑步一次，10 公里。&lt;/li>
&lt;li>周日把老婆送回娘家，因为是乡下自建房，老婆的房间在二楼，需要走楼梯上下楼的原因，周一的下午又有一些出血。怀孕以来平凡的抽血导致老婆的身体变得虚弱，到医院时血压都低于正常值了，之前的经验给我们造成了太大的压力。&lt;/li>
&lt;li>周二下午候补到了周三下午的高铁票，终于可以短暂的结束这种煎熬的内心状态了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-05---06-周">2025 年第 05 - 06 周&lt;/h2>
&lt;ul>
&lt;li>过年啦，今年过年陪老婆住院一直等到阴历 27 才出院。在家一直陪老婆躺着，也没有去哪里拜年&lt;/li>
&lt;li>到老家烧年纸，大家也都知道了崽崽的存在了。&lt;/li>
&lt;li>过了工作以来最长的一次&amp;quot;年假&amp;quot;吧，前前后后加起来差不多半个月了都。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-07-周">2025 年第 07 周&lt;/h2>
&lt;ul>
&lt;li>自从开年过来上班之后，就没出去跑过步，这一点有些拉跨了，其一是因为整天神经处于一个紧绷的状态，晚上休息的也不好，二来气温一直没回升，加上一直有一些小雨。&lt;/li>
&lt;li>周末到姑妈家吃饭，讨论了一下买房的事情，和哥哥深度的聊了聊天，得出一个结论，死死的上班真的很难挣钱，还是得开辟一下自己的睡后收入。&lt;/li>
&lt;li>周末公司例行体检，还是有很多毛病。跑步、锻炼真的不是停呀，一停就很难启动。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-08-周">2025 年第 08 周&lt;/h2>
&lt;ul>
&lt;li>老婆周天反馈说感觉孕吐有些减弱，加上已经两周左右没有检查了，周一到医院做了 B 超，一切正常，积血也消失了，老婆说在做 B 超的时候都看到崽崽的 &lt;code>jio jio&lt;/code> 在动了，很有画面感。&lt;/li>
&lt;li>公司的项目做了一个关于审批的功能，接到这个需求之前我是想着按照之前的写法，直接复制过来改吧改吧就完了。结果被部门负责人注意到排期，Leader 担心之后部门负责人会着重去看这块的代码，于是逼着重新设计了一个方案，做到了业务与审批流程相分离。果然人还是需要逼一下。同时也问一下自己，&lt;strong>为什么自己写的时候没想到这些，总是想着哪里有抄的，抄一下完事了，没有考虑到现有的痛点，难点，有哪些是可以优化的地方，一直这样确实没什么长进，今年强迫自己多使用设计模式吧。&lt;/strong>&lt;/li>
&lt;li>外公摔了一跤，头破了个口子，摔到了后脑勺，真吓人。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-09-周">2025 年第 09 周&lt;/h2>
&lt;ul>
&lt;li>这周老婆开始上班了，上了两天班，还是太累了，每天晚上回来都很累，大早六七点就睡了，恰逢驾驶证要过期要做体检了，问医院只能工作日去检查，于是就打算周三去做检查，恰好崽崽也 11 周了，就打算去把 NT 也一起做了，一次秒过，真好，之前看网上很多人做 NT 都要做很多次。&lt;/li>
&lt;li>天气在连续一周的阴雨连绵之后，难得在周末放了晴，带着老婆在老家的公园晒了晒太阳，周天也带老婆和侄子在公园广场上玩了一会。畅想有崽之后带崽出去玩耍的景象了，也愈发的渴望能够和老婆孩子在一起，陪伴孩子的成长。&lt;/li>
&lt;li>公务员考试报名了，恰好这次有个省直的岗位招我这个专业，只是看到这个消息时候已经很晚了，差不多还有个半个月？就要考试了，犹犹中豫豫错过了缴费时间，虽然报上了也过不了。&lt;/li>
&lt;li>老婆还评上学校的优秀教师呢，真好。&lt;strong>我也要规划好今后的发展呢。&lt;/strong>&lt;/li>
&lt;li>跑步一次，6 公里出头，天气放晴的第一天晚上去跑的，当时还穿了两件长袖，结果跑了一半热的不行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-10-周">2025 年第 10 周&lt;/h2>
&lt;ul>
&lt;li>本周跑步 3 次，累计 23 公里，周末到公司加班，没有回家陪老婆，还是希望能陪在她的身边。&lt;/li>
&lt;li>不知道是不是全球变暖的影响，现在的天气多变的离谱，在刚刚经历 3 天的 20-30℃高温之后，迎来了 2-6 ℃的寒潮，昨天还是短袖，今天又穿上了秋衣秋裤加棉袄。&lt;/li>
&lt;li>上周的公务员考试没有报上名，心里还是有一些遗憾。也许可以尝试一下，愈发的想要陪伴老婆，照顾崽崽长大，老婆一个人在老家实在是太累了，尤其是现在怀孕早期，每天胃都不是很舒服，呕吐变成了家常便饭，浑身也各种不爽，腿疼，肚子空，容易累，尿频&amp;hellip;&amp;hellip; 当母亲真难，女性也真的很伟大&lt;/li>
&lt;li>这周发版股价提醒，失败了好几次，遇到各种问题，首先是 XML 文件中新增字段，在 XML 中的批量新增中没有判断这个字段为空的情况，回滚后重新发版上去，当时看是没有问题的，结果第二天早上 9.30，开盘时服务直接 CPU 飙升，GC 时间飙升，导致 k8s 直接下线了服务，线上出现服务不可用的情况。由于是直接回滚了, 都没来得及 dump 出线上的情况，也给后续的分析造成了一定的困难，分析代码之后初步怀疑是日志打印的问题，本身这个服务的日志量就很夸张，加上我这次是第一次接手这个应用，增加了很多排查的日志. 所以日志里更加夸张，怀疑是日志写入处理不过来了, 导致 GC 卡死。&lt;/li>
&lt;li>周天上午跑了 11 公里，下午去补了牙齿，五颗坏牙齿，补了四颗，还有一颗比较严重，医生说需要先磨掉，看看严不严重，如果严重的话，需要做根管治疗。由于是没有挂上市口腔医院的号，所以就在附近的私人诊所里做了。现在还有一颗坏牙和一颗智齿和一颗牙需要种植。这一口牙不知道花了多少钱了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-13-周">2025 年第 13 周&lt;/h2>
&lt;ul>
&lt;li>补了四颗牙齿，一颗差不多三百块，还蛮贵呢。&lt;/li>
&lt;li>快到清明节了，老家的传统是清明节前十天挂亲，于是趁着周末回家的机会去爷爷的墓前祭拜了，弟弟也跟着一块回去了。&lt;/li>
&lt;li>第一次开车到老家呢，感觉还行，一路上顺风顺水，因为宝子一个人在家，头痛不舒服所以没有待到最后，带着弟弟先行回家了，结果妈妈他们一直到晚上 6、7 点才回来。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-14-周">2025 年第 14 周&lt;/h2>
&lt;ul>
&lt;li>领导告知了年终奖金的安排，这周睡眠很差，整个人的状态也很差，浑浑噩噩的。- 清明节假期回家陪了宝子，肚子已经有点显怀了。老婆微量元素检查报告显示有点缺铁。&lt;/li>
&lt;li>家里的蓝莓树的果子有点子泛蓝色啦，开心，说不定过几天就可以吃了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-15-周">2025 年第 15 周&lt;/h2>
&lt;ul>
&lt;li>上周周末确定了年终奖，还算可以吧，但是等级不是很高, 想要找领导聊一下涨工资的事情，但是一直没找到合适的时机。&lt;/li>
&lt;li>周末和老婆商量了下奖金的安排，抽取了部分资金置办了一台电脑，正好之前出了 M4 的 Mac mini，加上国补和教育优惠，觉得比较划算了，就入手这个吧，借用了弟弟同学的教育优惠来购买。&lt;/li>
&lt;li>宝子似乎感觉到胎动了，似乎感觉到被崽子踹了，下周和老婆去做个 B 超去，宝子带着听诊器听肚子，说听到了崽子放屁。&lt;/li>
&lt;li>周末要加班，去补一颗牙齿，下周再回家，正好周末可以去把电脑的环境安装好。&lt;/li>
&lt;li>前公司的人资联系了，开出的价格很低，只比当时出来前高一点点，没有什么回去的欲望了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-16-周">2025 年第 16 周&lt;/h2>
&lt;ul>
&lt;li>年终奖一发下来就规划的干干净净了，总有一种钱不够花的感觉，束手束脚的。唉。&lt;/li>
&lt;li>上周周末和这周一去看了房子，好累啊，长沙的租房环境好差，都是各种二房东，租房的价格也不便宜。要么就是离公司太远。现在的房子一开始租金 1.6 k，后来和房东聊到 1.5 k，这周去找的房子，比现在住的离公司远了 5-6 公里吧，价格便宜个 100 左右，总是感觉划不来，如果换房子的话，得要个摩托车，加上通勤时间的延长，租房的幸福度直线下降。&lt;/li>
&lt;li>在飞书上和领导聊了一下涨工资的事情，按领导的意思是现在没有涨工资的消息，让我继续努力，加上上周前公司开出的价格，我有点动摇了，想尝试出去找找新的机会看看。&lt;/li>
&lt;li>老婆中期唐筛的结果出来了，电话通知的一瞬间有些不知所措，还好只是临界风险，再者唐筛的准确率还是比较低的，所以和老婆一番规划之后决定来长沙做一个无创 DNA 排查一下相关的风险，长沙的无创不需要收费，刚好我是长沙户口可以薅到这个羊毛。&lt;/li>
&lt;li>周五请了半天假做了检查，接下来的一天半和老婆吃吃喝喝还是蛮开心，做的小龙虾没有以前好吃了，不知道是因为火锅底料没选好、或者没有家加啤酒煮，亦或者是太久没做了厨艺不行了。吃了烤肉，老婆吃的很开心，我却有些担心，有点杞人忧天吧，担心这担心那的。&lt;/li>
&lt;li>周天送老婆回去了，接下来就安心等结果吧。愿一切安好。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-17-周">2025 年第 17 周&lt;/h2>
&lt;ul>
&lt;li>又感冒了，睡觉的时候贪凉快了，没有盖被子，导致第二天起来喉咙就开始不舒服，接下来就开始流鼻涕，流个不停。&lt;/li>
&lt;li>Mac 终于折腾的差不多了。各种环境也算是处理的差不多了，本就不大的存储越发捉襟见肘，果然苹果的内存和存储都是金子做的。&lt;/li>
&lt;li>周五老婆收到短信提示无创的结果出来，虽然知道如果只有短信提醒就是好的结果，但是还是按捺不住的激动，心率一下子就窜上来了，看完结果一切都好，说来也是神奇，基本上昨晚检查之后每天都会去小程序查看好几次的结果，周五早上因为事情耽搁之后没来得及去按时去看，结果就出来了。看完结果之后赶紧用手表测了一下心率，直接 100+，要知道我在得知结果出来之前的心率是 60+。真的好激动，肾上腺素飙升的感觉，甚至可以感觉到血再一股一股的往外泵。&lt;/li>
&lt;li>本周末需要补班，周末不回去，周六浅浅的去跑了一下步，太难了，太久没动再起步就和以前没跑一样，跑几公里就岔气了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h2 id="2025-年第-18-周">2025 年第 18 周&lt;/h2>
&lt;ul>
&lt;li>五一啦，丈母娘趁着五一做了个小手术，所以五一假期基本上都是在医院、家里、丈母娘家三点一线的活动，4 号出院之后把车开到市区去做了保养。回来就发现老婆又些发烧，赶紧回家休息。&lt;/li>
&lt;li>其实当天早上一起床老婆就感觉不对劲，头痛、脖子痛、腿痛，但是之前都出现过这些，所以最开始没有往发烧上面去想，后来发现越来越不对劲，回家量了一下体温，37 °C +，因为是孕妇，不能直接用药，于是先物理降温，用热毛巾敷了额头，换了几次毛巾之后发现作用不大，于是赶紧下楼买了退烧贴，贴了两贴到额头和后脖颈，差不多晚上 10-11 点终于退烧了，体温回到了 36 度+，算是好了。回想了一下，可能感冒的原因是前一天晚上没有盖好被子？老婆睡觉不是很老实，晚上即使醒了给她盖上好几次，下次醒过来也都是被踢走了。&lt;/li>
&lt;li>感冒好了之后第二天到医院测了一下胎心，140+，胎心正常，悬着的心也算是放下了一些，但是不知道是不是心理作用，从老婆发烧的时候感觉开始，感觉崽子不活跃，可能是之前老婆都很积极的告诉我，说崽子又踢她了，不舒服就不是很愿意说话的原因吧。后来问老婆老婆还是会说崽子有经常踢她。&lt;/li>
&lt;li>五一的假期光顾最多的就是医院了，现在回想起来有点后悔，孕妇去那么多次医院，还不带口罩，真的是很大胆，有点太心大了。但是没办法，毕竟是自己的妈妈做手术，我不可能不让她去，但是至少应该给她准备好口罩。&lt;/li>
&lt;li>五一有一个同学结婚，乘着这个事情一些同学碰了碰面，大家基本上都是在老家的公职体系里，教师、公务员、银行、医生，所以在一起出发的时候感觉有点格格不入，或者说是对未来的担忧。在外面也混的不好，曾经在学校也算是比较突出的，现在却没有什么拿得出手的成绩、甚至对未来都没有确定的规划。到底输在了哪里。&lt;/li>
&lt;li>五一本来是计划高铁来回的，因为担心高速免费会导致堵车，结果节前姐姐给我打电话，想让我开她的车顺带把她们捎回去，到时候来的时候也帮忙把她的车开回来，因为我已经买了高铁票，如果要开车的话我就需要把票退掉，同时需要承担高速堵车的风险，所以我本身是比较抵触这件事情，但是因为姐姐对我、我家里都帮了很多忙，滴水之恩当涌泉相报，所以还是退了票去帮忙开了车。离谱的是，最开始找我开车的时候说好下午就走，她过来接我，当时当天上午下班之后我问她什么时候出发，她说还有事情需要处理，大概两点多出发我这里来接我，我考虑两点多，再过来必然会耽误很多的时间，所以我坐车去了姐姐家。结果去了之后一等再等，她一拖再拖，直到三点半左右才正式出发，这让我很恼火，我本身着急回家，因为丈母娘住院，还是希望回去当天能去医院探望一下。结果一直到 6 点多才到家，这还是我开的比较快的情况下。&lt;/li>
&lt;li>更离谱的事情来了。本来在邀我开车之前，说是到时候 5 号一块回，让我帮忙开回来，所以我把回程的高铁票也退了，结果回家的高速上，姐姐说她可能要先回去，要去一趟岳阳，当时我没有想太多，结果在三号还是四号的时候，姐姐到家说，她要临时先回长沙，要开车回去，来征求我的意见，搞得好像我能拒绝一样，就很离谱，一变再变，甚至都没有提前告知。还好当时还有汽车票可以买，不然我都不知道如何回工作的地方。这一点搞得我很恼火，于是找到爸妈抱怨，结果他们的态度让我更加火大，我知道他们是担心奶奶听到我一直抱怨不好，他们也认姐姐帮助过他们的恩情，但是就是很离谱，甚至没有站到我的立场上说一句话，这件事难道不是她的错吗？错了连说都不能说吗？我也没有当着面给脸色，就像我后来跟爸妈发消息说的一样，我也是认她的恩情，不然我不可能憋着火，早就发脾气了。&lt;/li>
&lt;li>父母都是老实人，但是越是老实人越吃亏，从小到大，干什么苦力劳力都是喊我们家，不是我爸就是喊我，越老师就越吃亏呗。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>2024.12 总结</title><link>https://hugh-zhan9.github.io/posts/2024.12/</link><pubDate>Wed, 25 Dec 2024 22:24:48 +0800</pubDate><guid>https://hugh-zhan9.github.io/posts/2024.12/</guid><description>&lt;p>12月初的周末是带侄子的一天，给凯子买了风筝，这小子不喜欢，害得我独自放了半天。&lt;/p>
&lt;p>第二天想带着宝子去县城最高的山，发现上山的路在施工，于是折返，顺便从山上带了一些土回来，给宝子从云南带回来的多肉进行分盆和加土。回来的路上在半路上停车玩了一会，路边的小山坡上一个几棵特别高大的板栗树，去树下搜了半天的板栗，没找到几颗，倒是扎了一手刺，开心的是拍了一些美美的照片。&lt;/p>
&lt;hr>
&lt;p>恢复跑步了，昨天看了一个关注的博主，10 公里，4 分多的配速，心率维持在 140+，再看看我这 3-5公里，5 分多配速，心率最高 170+的选手😂，不过毕竟别人坚持了 10 年，我这半路出家。慢慢来吧&lt;/p>
&lt;p>播客已经逐渐在我的生活中取代音乐，不知道从什么时候开始我更愿意提一些人声的博客，而不是“嘈杂”的音乐。可是有一个困境，就是在 Windows 下找不到好用的客户端，或者 iOS 和 Windows 同步的客户端，这导致我只能使用手机 APP 来进行收听，时下大火的小宇宙也不支持桌面端。
写下这段文字之后去搜索了一下 Apple 博客，结果发现苹果的博客有网页版，😂，之前都没有搜索过。舒服了&lt;/p>
&lt;hr>
&lt;p>之前基于笔记本刷了一个黑群晖自建一个 NAS，部署了一些私有化服务，苦于网盘的使用，两个份额比较大的网盘服务的免费用户都有各种各样的不便利，遂计划在 NAS 上部署一个私有化的网盘服务，在网络上搜索了一下发现多个可选项，选择 seafile 和 nextcloud 两款进行对比。&lt;/p>
&lt;hr>
&lt;p>以前的领导问我愿不愿意回去，说是比较缺人，但是时间很着急。&lt;/p>
&lt;p>看了一篇文章，提到了&amp;quot;电梯理论&amp;quot;：https://mp.weixin.qq.com/s/BnpJVuraBf60PtUVUkYAyQ&lt;/p>
&lt;hr>
&lt;p>昨天旧领导的突然发问，我觉得对我产生了困扰，不知道如何去了解去解决，心理对于之前离开的担忧还是没有得到解决，但是对于未来的不确定又让我对那边存在幻想。加上最近的工作状态，现在处于一种内心很不舒适的状态。&lt;/p>
&lt;p>Follow 使用了一段时间，总是有一些很难接口的小 bug，以我梯子常驻后台的网络情况来说，数据同步总是不及时，选择了只显示未读，读完一篇文章以后，这篇文章 100% 还会躺在未读的列表里，没有自动刷新的机制，同时还有默认开启的莫名其妙的滑动即已读的机制。&lt;/p>
&lt;p>以及不知道是不是有数据上限，明明收藏了，点开收藏就是看不见，找了半天才找到，就很烦。&lt;/p>
&lt;hr>
&lt;p>AI 的发展整的太快了，我一直在使用的豆包我觉得找到了一个很好的发展方向，它应该是一个基于浏览器的应用，但是在最近的一个新版中，它逐步变成了一个浏览器，支持导入主流的浏览器的书签，同时将豆包支持的功能嵌入了浏览器的页面浏览中，可以总结、朗读、脑图等等，在浏览器被微软谷歌垄断的情况下，豆包不可能将豆包完美的融入到现存的浏览器中，这次更新它们另辟蹊径干脆自己就成为一个浏览器，这和现如今的一些 AI PC终端是完全不一样，这个角度真的很棒。&lt;/p>
&lt;p>试用了一下集成浏览器后的豆包，算是大大便利了使用吧，减少了一些辅助插件的安装，不再需要安装翻译插件，豆包本身就支持，虽然效果不如沉浸阅读翻译插件的效果好，但是这个随着数据量的使用肯定是会提升的。生成脑图和总结是很好的功能，在这信息爆炸的年代，太多的文章我觉得并不需要逐字逐行地去阅读。这个功能就大大地节省了时间。&lt;/p>
&lt;hr>
&lt;p>剪了一个 5块钱的头，意外的剪得很好，十分值得，以后就打算做那里的常驻嘉宾了。&lt;/p>
&lt;p>生日和结婚纪念日人为的安排在了一起，这样我们就可以给对方互相赠送礼物。&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0df5c3edd.jpeg" alt="">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0dfe95a15.jpg" alt="">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0e01ca71d.jpg" alt="">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0e0289e9c.jpg" alt="">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0e089ce68.jpg" alt="">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0e0a008aa.jpg" alt="">&lt;/p>
&lt;p>感谢老婆准备的冰糖葫芦鲜花，最佳老公奖牌、好吃的芋泥蛋糕还有跑鞋，希望以后它可以陪伴我参加一次马拉松呢。&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0eff9a895.jpeg" alt="">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c0f004fcba.jpeg" alt="">&lt;/p>
&lt;hr>
&lt;p>和老婆因为一件小事争吵了起来，这种针锋相对的询问方式不是一种好的交流方式，更类似于辩论，两个人的生活这种形式的交流会让双方都觉得很累。其实我本没有很在乎那件事情本身，但是这件事得场外影响我可能觉得很难承担，所以一直纠结这一点，但是女生的思维就是，我只和你聊这件事，我可能要的不是这件事的结果，我要的是这件事的态度。&lt;/p>
&lt;hr>
&lt;p>趁着周六休息加上较为难得得暖阳，出去跑了个 10公里，这应该是我第一次十公里，意外得比较轻松，可能过了前面 3-5公里所谓的疲劳极点，后面身体热起来之后就变得适应起来了吧。&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/12/25/676c1419a66df.jpg" alt="">&lt;/p>
&lt;p>看了一个视频，关于如何跑步得，觉得讲得很好，后面也按照这种模式训练吧。&lt;/p>
&lt;p>&lt;a href="https://player.bilibili.com/player.html?isOutside=true&amp;amp;aid=113610877705209&amp;amp;bvid=BV1XAq5YZEYK&amp;amp;cid=27224180350&amp;amp;p=1">【「慢」即是快❓特殊远古慢跑训练法解析❗容易PB跑步名著解析系列 斯内尔 哈尔博格 马拉松 中长跑 世界纪录 奥运会】&lt;/a>&lt;/p>
&lt;p>跑完 10公里之后，冒出一个这样得想法：也算是真正的爱上了运动，立一个愿望清单明年买一块运动手表吧&lt;/p>
&lt;p>妈的，真是日了狗了，本身是个开心的事情，结果钥匙拿错了，进不了门，被迫叫了开锁公司，一天得好心情也被这件事影响了。&lt;/p>
&lt;p>人总是很容易因为一件小事打乱一整天的好心情，本来回来的路上规划的好好的，结果因为钥匙的事情整的啥都不想干了，吵架带来的后续也痛苦的不行&lt;/p>
&lt;hr>
&lt;p>组内做了一下业务的划分，幸运的是我是和一个能力比较强的同学分到了一块，这周过了一次他的方案，确实十分详细，考虑的角度十分周详，应该可以学到蛮多，更多的是思考的模式吧&lt;/p>
&lt;hr>
&lt;p>还是忍不住点了一杯咖啡，明明不建议喝这个，需要控制一下自己，还是以水替代饮品吧。还能多尿尿来降低久坐的时间。&lt;/p></description></item><item><title>2024.11 总结</title><link>https://hugh-zhan9.github.io/posts/2024.11/</link><pubDate>Fri, 29 Nov 2024 16:00:25 +0800</pubDate><guid>https://hugh-zhan9.github.io/posts/2024.11/</guid><description>&lt;p>周六加了个班，晚上高一铁回家，巧的是晚上也是 LOL S14 的全球总决赛，不知道从什么时候开始，游戏对我的吸引力越来越低了，提不起兴趣去看这个比赛了，可能也是内心没有更多的期待了，打心底里就认为比较难吧，也有可能以前那些人都不在了。更想配置家里人说说话，年纪渐长越发珍惜陪伴的时间吧，加上一直处于异地的状态，更不愿意割舍出时间去做这些没什么太多意义的事情。&lt;/p>
&lt;hr>
&lt;p>周一去吃了一碗粉，量可真足，价格也算合适，算是一个不错的选择吧，比上不足比下有余。但是很有生活气息，舒服
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/07/672c0febd5369.jpg" alt="Weixin Image_20241107085206.jpg">&lt;/p>
&lt;hr>
&lt;p>今天特地没加班，跑回来给宝子做比赛的东西，后来通知八点要开会，想着开会就回去打个卡吧，给宝子做完发现肚子好饿，想着怎么蒸的红薯还没好，跑过去一看发现欸，没有按开始的，和宝子一说，宝子很心疼，打开回来想着去买个肯德基，付款的时候发现交通银行有 2.5 的优惠，转钱到交行的卡上发现，卡太久没有使用被冻结了，打电话过去发现需要去窗口才能解冻，遂不点肯德基回家。在家里忙事情的时候貌似听到有人敲门，将信将疑得去开门，发现门口放着一杯奶茶，拿起一看，原来是老婆给我点的。
给老婆打电话，老婆在客厅和奶娘说话，老婆和奶奶说，你只心痛你儿子，你心痛一下你孙子呢，饿着饿着就不饿了。宝子说我这个人好没仪式感，今天是立冬呀，傻瓜。
看着宝子写的备注，泪水打湿了眼眶，真好呀，有个人一直惦记着你，把你放在心上。&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/07/672cbfc1ebe88.jpg" alt="Weixin Image_20241107212325.jpg">&lt;/p>
&lt;hr>
&lt;p>2024.11.09
早上带着昨天的米 9 手环到跑步，可能这是今年入手的最有用处的电子产品了，我觉得很合适，记录运动的同时也会促使我去运动，同时待机的时长也合适，之前使用苹果的手表，真的电量焦虑，总担心一天就没电了，现在就没这个担忧，基本上一天才百分之几，充电也很迅速，运动完，看着圆环闭合，和运动分析看着就很舒适。同时也会记录我的睡眠情况，很适合现在我的这个状态，需要关注的点基本上也都能够覆盖。
同时也发现身体素质真的越来越差了，随着这么久没有运动。
早起真的发现一天的时间都变长了，心态也轻松很多，可以发现很多美好的东西。&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/09/672ebe8f42307.png" alt="Weixin Image_20241109093844.png">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/09/672ebe9590049.jpg" alt="Weixin Image_20241109093853.jpg">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/09/672ebe9537161.jpg" alt="Weixin Image_20241109093905.jpg">
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/09/672ec00f28634.jpg" alt="Weixin Image_20241109093858.jpg">&lt;/p>
&lt;p>不知不觉都 11 月了，写的时候还以为是 10 月，一看电脑右下加的时间才发现已经11 了，时间过得可真快。&lt;/p>
&lt;hr>
&lt;p>周天在家抽空看了部电影，《驴得水》，比较久了，当时我看的时候以为是和电视剧一样的戏剧，结果看着看着看 emo 了，任素汐饰演的张一曼演的可真好，前后的反差真的很让人心疼。周铁男也是，从最开始的怼天怼地，再经历一枪之后的变化是翻天覆地的，这就是人性吧，虽然没有打中，但是那种震撼，对于内心的冲击是不一样的，没有人能经受得住第二枪。
我可能没有真正的看懂这部电影，不知道隐喻，或者其他有所指的东西，可能是见识还不够，就和让子弹飞一样，只有看了那么多解析，才发现原来别有洞天。但是给我的冲击还是蛮大的，所以打算留着这部电影以后再看。
据说这部电影以前是话剧，是由话剧改编来的，真想以后去看看话剧的现场表演。
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/11/67319d9bd6cd0.jpg" alt="1731304722977.jpg">&lt;/p>
&lt;p>2024.11.11 早上老婆给我打电话，说车祸了，说实话第一时间脑子是懵的，好在是没有人受伤，只是车子破了口子，赔了 150 块钱倒还好。但是可能对于当事人的冲击是比较大的，然后又是在学习的路上，所以很多老师看到了，在学校讨论，可能这一点更加让人感到不安吧。&lt;/p>
&lt;hr>
&lt;p>同龄压力
&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/12/673366f70fc78.png" alt="同龄压力.png">
好像我们眼前可以看到的都是比我们过得好的人的生活，永远在羡慕别人的日子。羡慕别人在大城市过的如何，工资多高，但是当时的选择是自己做的，看到别人的生活又开始羡慕，但是再给一个做选择的机会大概率也还是会这么选。这就是人的惰性吧。但是这并没有什么不好，我觉得，想要安逸，那就接受平凡就好。&lt;/p>
&lt;p>总是在思考自己怎么怎么差，但是却没有明确的行动去改变，这就是内耗吧。但是其实，我觉得谁的生活不会有一些不如意呢，&lt;/p>
&lt;hr>
&lt;p>吓死我一跳，不知道怎么的写了一下午的单元测试误操作回滚了，导致我以为代码丢了，顿时汗都出来了，赶紧去网站上搜了一下，还好 IDEA 有备份的功能，可以通过这个备份恢复。
&lt;a href="https://blog.csdn.net/m0_46546969/article/details/125458703">恢复rollback了的未commit代码_idea rollback后怎么恢复-CSDN博客&lt;/a>
不得不感叹 IDEA 真的强大。&lt;/p>
&lt;hr>
&lt;p>18-22 这一周差不多天天喝饮料、不是喜茶就是咖啡啥的。这周有很多坏情绪和坏心情，好在在老婆的陪伴和自我的疏通下都过去了。老婆已经远赴云南去参加比赛了。祝她好运呀。前段时间一直忙着帮忙准备比赛材料，睡得也比较晚了，锻炼也放松了许多，加上骤然的降温，这周都没有去跑步。这周有了很多小的 idea, 到实践时发现总是磕磕碰碰，感觉没有时间，所以又重拾了 todoList 软件，记录一下需要做的事情，希望不要像以前一样，只是记录没有去做，先把 flag 立好 🚩。再帮老婆改 PPT 的时候还发现自己一个特别不好的相关，太电子洁癖了，总是把暂时用不到的数据删除，删除就算了毕竟还有回收站可以恢复。但是我硬是喜欢没事就去清空一下，导致很多文件被我随手删掉了，然后后来发现要用的时候就找不回来了&amp;hellip;..。这个习惯要改一下，对了还有一个点，就是以后睡觉了下床，一定要穿鞋。坏习惯都要慢慢改了&lt;/p>
&lt;p>&lt;img src="http://photo.zhangyk.space:9089/thumbnails/82f862118f9def25281494ac8b947177.png" alt="老婆, 加油">&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/25/6743e3536809f.png" alt="IMG_1558.png">&lt;/p>
&lt;p>宝子没拿奖，真可惜呀，还是竞争太激烈了，可能也有一些稍微的准备不足吧。再接再厉吧。真可惜，玩也没玩好。昆明可真美啊，老婆他们要去大理玩了，我都还没去过的。以后一定要去一次&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/11/25/6743e34e7d1cc.jpeg" alt="昆明的日落">&lt;/p>
&lt;p>洱海真的好美啊。好爱这个图标 🏔&lt;/p>
&lt;hr>
&lt;p>重拾了 WSL，打算把其他编程语言的环境都搭建在 WSL 里，做出这个决定的原因是，前一天晚上使用 Go 配合豆包计划写一个小工具用来把视频进行一个画面旋转，结果调用命令行的时候死活执行报错，最后发现原因是因为 FFmpeg 默认安装在 &lt;code>C:\Program Files&lt;/code> 这个目录下面了，导致 Go 在调用时总是使用 &lt;code>C:\Program Files\FFmpeg\FFmpeg.exe&lt;/code> 来执行命令，但是呢，由于 &lt;code>Program Files&lt;/code> 之间有空格，命令行识别 &lt;code>C:\Program&lt;/code> 就结束了，这就导致死活执行不了，最后把 FFmpeg 换了一个文件夹来进行安装才得以执行。在 linux 下面就不会有这种恶心的问题。&lt;/p></description></item><item><title>Golang 基础学习</title><link>https://hugh-zhan9.github.io/posts/golang-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 25 Nov 2024 10:48:25 +0800</pubDate><guid>https://hugh-zhan9.github.io/posts/golang-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;errors&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sync&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">helloWord&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Hellow Word!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">paramVar&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;测试&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">paramVar&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">test&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;测试&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">helloWord&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">test&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#75715e">// 获取 x 的指针&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">p&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span> = &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#75715e">// *p表达式对应p指针指向的变量的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">nums&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">10&lt;/span>,&lt;span style="color:#ae81ff">20&lt;/span>,&lt;span style="color:#ae81ff">30&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 切片&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">slice1&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make([]&lt;span style="color:#66d9ef">float32&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">slice2&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make([]&lt;span style="color:#66d9ef">float32&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(len(&lt;span style="color:#a6e22e">slice1&lt;/span>), len(&lt;span style="color:#a6e22e">slice2&lt;/span>), cap(&lt;span style="color:#a6e22e">slice2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">slice2&lt;/span> = append(&lt;span style="color:#a6e22e">slice2&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(len(&lt;span style="color:#a6e22e">slice2&lt;/span>), cap(&lt;span style="color:#a6e22e">slice2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 子切片 [start:end)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">subSlice1&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">slice2&lt;/span>[&lt;span style="color:#ae81ff">3&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">subSlice2&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">slice2&lt;/span>[:&lt;span style="color:#ae81ff">3&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">subSlice3&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">slice2&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>:&lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(cap(&lt;span style="color:#a6e22e">subSlice3&lt;/span>), &lt;span style="color:#a6e22e">subSlice3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 切片合并&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">appendSlice&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> append(&lt;span style="color:#a6e22e">subSlice1&lt;/span>, &lt;span style="color:#a6e22e">subSlice2&lt;/span>&lt;span style="color:#f92672">...&lt;/span>) &lt;span style="color:#75715e">// subSlice2... 是切片解构的写法，将切片解构为 N 个独立的元素。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">appendSlice&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// map&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">map1&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#66d9ef">string&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">map2&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e6db74">&amp;#34;key&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">map1&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;key&amp;#34;&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">map1&lt;/span>, &lt;span style="color:#a6e22e">map2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// if-else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">map1&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;key&amp;#34;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 简写&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">age&lt;/span>&lt;span style="color:#f92672">:=&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>; &lt;span style="color:#a6e22e">age&lt;/span>&amp;lt;&lt;span style="color:#ae81ff">18&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;simple true&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;simple false&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// switch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 在这里，使用了type 关键字定义了一个新的类型 Gender。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 使用 const 定义了 MALE 和 FEMALE 2 个常量，Go 语言中没有枚举(enum)的概念，一般可以用常量的方式来模拟枚举。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Gender&lt;/span> &lt;span style="color:#66d9ef">int8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">const&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">MALE&lt;/span> &lt;span style="color:#a6e22e">Gender&lt;/span> = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">FEMLE&lt;/span> &lt;span style="color:#a6e22e">Gender&lt;/span> = &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">gender&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">MALE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 和其他语言不同的地方在于，Go 语言的 switch 不需要 break，匹配到某个 case，执行完该 case 定义的行为后，默认不会继续往下执行。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">gender&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">MALE&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;MALE&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">FEMLE&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;FEMALE&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 如果需要继续往下执行，需要使用 fallthrough，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">gender&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">MALE&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;MALE&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">fallthrough&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">FEMLE&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;FEMALE&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// for&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">sum&lt;/span>&lt;span style="color:#f92672">:=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">50&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">sum&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">sum&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//遍历 集合&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">num&lt;/span>&lt;span style="color:#f92672">:=&lt;/span>&lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">nums&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">num&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">key&lt;/span>, &lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">map2&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">key&lt;/span>, &lt;span style="color:#a6e22e">value&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">div&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">addWithReturn&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">openFile&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">hello&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hugh_&amp;#34;&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;err is nil&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">hello&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">res&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">getByIndexWithOutPanic&lt;/span>(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">res&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// getByIndex(5)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">stu&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">Student&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Tom&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">stu&lt;/span>.&lt;span style="color:#a6e22e">hello&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Jack&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">msg&lt;/span>) &lt;span style="color:#75715e">// hello Jack, I am Tom&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 初始化一个对象， 使用接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 实例化 Cat后，强制类型转换为接口类型 Animals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">ani&lt;/span> &lt;span style="color:#a6e22e">Animals&lt;/span> = &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">Cat&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Tom&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">age&lt;/span>: &lt;span style="color:#ae81ff">18&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">ani&lt;/span>.&lt;span style="color:#a6e22e">getName&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 实例可以强制类型转换为接口，接口也可以强制类型转换为实例。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 接口转为实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">cat&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">ani&lt;/span>.(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Cat&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">cat&lt;/span>.&lt;span style="color:#a6e22e">getAge&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">emptyInterface&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;================================== sync ==================================&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">10&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">wg&lt;/span>.&lt;span style="color:#a6e22e">Add&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">syncDownload&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">wg&lt;/span>.&lt;span style="color:#a6e22e">Wait&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;sync job done&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// wg.add(1) 为 wg 添加一个计数， wg.Done() 会减去一个计数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// go syncDownload() 启动一个协程去并发的执行 syncDownload 函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// wg.wait() 等待所有协程执行结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">3&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">channelDownload&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;download url/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> string(&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>)) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// string(i+&amp;#39;0&amp;#39;) 是一种将数值转换成对应 字符串的方式， 是通过 ASCII 码转换的。 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 在 golang 中可以使用 str := strconv.Itoa(num) 的方式实现 Java 中 String.valueOf 的效果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 对于其他类型的数值，比如 float64 类型，Go 语言使用 strconv.FormatFloat 函数来实现类似的精准转换&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// fmt 的 Sprinf 函数也可以达到相同的效果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">3&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;finish&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">msg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;channel job done&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 函数 func functionName(param1 type, param2 type, ....) (result1 type, ...) { //body }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">notReturn&lt;/span>(&lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">num2&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">num1&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">num2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">noParams&lt;/span>() &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;this is retrun&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">num2&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">div&lt;/span>(&lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">num2&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) (&lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#a6e22e">num2&lt;/span>, &lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#a6e22e">num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 也可以给返回值命名，简化 return，例如 add 函数可以改写为&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">addWithReturn&lt;/span>(&lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">num2&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) (&lt;span style="color:#a6e22e">ans&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ans&lt;/span> = &lt;span style="color:#a6e22e">num1&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 异常处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">openFile&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">Open&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;filename.txt&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 可以通过 errorw.New 返回自定义的错误&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">hello&lt;/span>(&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> len(&lt;span style="color:#a6e22e">name&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errors&lt;/span>.&lt;span style="color:#a6e22e">New&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;error: name is null&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello,&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">name&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// error 往往是能预知的错误，但是也可能出现一些不可预知的错误，例如数组越界，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 这种错误可能会导致程序非正常退出，在 Go 语言中称之为 panic。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">getByIndex&lt;/span>(&lt;span style="color:#a6e22e">index&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">array&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">array&lt;/span>[&lt;span style="color:#a6e22e">index&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// defer-recover 类似 Java 中的 try-catch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在函数中，使用 defer 定义了异常处理的函数，在协程退出前，会执行完 defer 挂载的任务。因此如果触发了 panic，控制权就交给了 defer。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在 defer 的处理逻辑中，使用 recover，使程序恢复正常，并且将返回值设置为 -1，在这里也可以不处理返回值，如果不处理返回值，返回值将被置为默认值 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">getByIndexWithOutPanic&lt;/span>(&lt;span style="color:#a6e22e">index&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) (&lt;span style="color:#a6e22e">ret&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">defer&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> recover(); &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;some error happend!&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">r&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">ret&lt;/span> = &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">array&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">array&lt;/span>[&lt;span style="color:#a6e22e">index&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 结构体 struct 类似于 class&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Student&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">age&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 这是一个方法， 使用 func 直接定义的是函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">stu&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Student&lt;/span>) &lt;span style="color:#a6e22e">hello&lt;/span>(&lt;span style="color:#a6e22e">person&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Sprintln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello %s, I am %s&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">stu&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#a6e22e">person&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Sprintf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello %s, I am %s&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">stu&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#a6e22e">person&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// f: 支持占位符 ln: 不支持占位符，空格间隔 S：不在终端显示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 使用 Student{field: value, ...}的形式创建 Student 的实例，字段不需要每个都赋值，没有显性赋值的变量将被赋予默认值，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 例如 age 将被赋予默认值 0。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 实现方法与实现函数的区别在于，func 和函数名hello 之间，加上该方法对应的实例名 stu 及其类型 *Student，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 可以通过实例名访问该实例的字段name和其他方法了。调用方法通过 实例名.方法名(参数) 的方式。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 除此之外，还可以使用 new 实例化：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">newStudent&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">stu2&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> new(&lt;span style="color:#a6e22e">Student&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">stu2&lt;/span>.&lt;span style="color:#a6e22e">hello&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Alice&amp;#34;&lt;/span>)) &lt;span style="color:#75715e">// hello Alice, I am , name 被赋予默认值&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 接口 interface&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// golang中并不需要显式地声明实现了哪一个接口，只需要直接实现该接口对应的方法即可。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Animals&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">getName&lt;/span>() &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Cat&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">age&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">smallCat&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Cat&lt;/span>) &lt;span style="color:#a6e22e">getName&lt;/span>() &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;a small cat, miao miao&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">cat&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Cat&lt;/span>) &lt;span style="color:#a6e22e">getAge&lt;/span>() &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">cat&lt;/span>.&lt;span style="color:#a6e22e">age&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Dog&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">gender&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">smallDog&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Dog&lt;/span>) &lt;span style="color:#a6e22e">getName&lt;/span>() &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;a small dog, wang wang&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 通过下面这种方式可以校验 struct 是否实现了对应接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Fish&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">gender&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 就是将 struct 的实例强制转换成 接口的实例，没有实现的接口的话转换就会报错&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 将空值 nil 转换为 *Cat 类型，再转换为 Animals 接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span> &lt;span style="color:#a6e22e">Animals&lt;/span> = (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Cat&lt;/span>)(&lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span> &lt;span style="color:#a6e22e">Animals&lt;/span> = (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Dog&lt;/span>)(&lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// var _ Animals = (*Fish)(nil) //cannot use (*Fish)(nil) (value of type *Fish) as Animals value in variable declaration: *Fish does not implement Animals (missing method getName)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 空接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 如果定义了一个没有任何方法的空接口，那么这个接口可以表示任意类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">emptyInterface&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#66d9ef">interface&lt;/span>{})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">m&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;hugh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">m&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>] = &lt;span style="color:#ae81ff">27&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">m&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;source&amp;#34;&lt;/span>] = []&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>} &lt;span style="color:#75715e">// [3]int{1,2,3} 这是一个数组， 而 []int{1,2,3} 是一个切片，数组的长度不能变化，而切片的长度可以变化。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">m&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * golang 中的并发编程
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// sync&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// golang 中提供了 sync 和 channel 两种方式支持 协程 goroutine 的并发&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 如果类似并发下载，多个并发协程不需要通信，可以使用 sync.WaitGroup 等待所有并发协程执行结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 注意这里不是 var wg = sync.WaitGroup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">wg&lt;/span> &lt;span style="color:#a6e22e">sync&lt;/span>.&lt;span style="color:#a6e22e">WaitGroup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">syncDownload&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;start to sync download something&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Sleep&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">wg&lt;/span>.&lt;span style="color:#a6e22e">Done&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// channel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 使用 channel 信道，可以在协程之间传递消息。阻塞等待并发协程返回消息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span> = make(&lt;span style="color:#66d9ef">chan&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">channelDownload&lt;/span>(&lt;span style="color:#a6e22e">url&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;start to channel download something&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">url&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Sleep&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">channel&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">url&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 单元测试&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 假设我们希望测试 package main 下 calc.go 中的函数，只需要新建一个 calc_test.go 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在其中新建测试用例即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// calc.go 文件中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// package main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// func add(num1 int, num2 int) int {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	return num1 + num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// calc_test.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// package main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// import &amp;#34;testing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// func TestAdd(t *testing.T) {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	 if ans := add(1, 2); ans != 3 {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 		t.Error(&amp;#34;add(1, 2) should be equal to 3&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	 }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 运行 go test，将自动运行当前 package 下的所有测试用例，如果需要查看详细的信息，可以添加-v参数。 go test -v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// golang 中的 包Package 和 模块Modules&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 一般来说，一个文件夹可以作为 package，同一个 package 内部变量、类型、方法等定义可以相互看到&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 加入在一个文件夹中我们写了一个 calc.go 和 main.go， calc.go 定义了一个 add 函数, 在 main.go 中进行了调用，此时就需要 go run . 或者 go run main.go calc.go 来编译&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// golang 也有 Public 和 Private 的概念，粒度是包。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 如果类型/接口/方法/函数/字段的首字母大写，则是 Public 的，对其他 package 可见，如果首字母小写，则是 Private 的，对其他 package 不可见&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Modules 是 golang 1.11 之后引入的，之前使用 $GOPATH 机制，Go Modules 可以算作是较为完善的包管理工具。同时支持代理，国内也能享受高速的第三方包镜像服务。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Go Modules 在 1.13 版本仍是可选使用的，环境变量 GO111MODULE 的值默认为 AUTO，强制使用 Go Modules 进行依赖管理，可以将 GO111MODULE 设置为 ON。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在一个空文件夹下，初始化一个 Module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// $ go mod init example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// go: creating new go.mod: module example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 此时，在当前文件夹下生成了go.mod，这个文件记录当前模块的模块名以及所有依赖包的版本。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 接着，我们在当前目录下新建文件 main.go，添加如下代码：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// package main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// import (&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	&amp;#34;rsc.io/quote&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// )&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// func main() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	fmt.Println(quote.Hello()) // Ahoy, world!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 运行 go run .，就会触发第三方包 rsc.io/quoto 的下载，具体的版本信息也会记录在 go.mod 中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// module example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// go 1.13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// require rsc.io/quote v3.1.0+incompatible&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 我们在当前目录，添加一个子 package calc，代码目录如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// demo/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// |--calc/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// |--calc.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// |--main.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在 calc.go 中写入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// package calc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// func Add(num1 int, num2 int) int {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	return num1 + num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 在 package main 中如何使用 package cal 中的 Add 函数呢？import 模块名/子目录名 即可，修改后的 main 函数如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// package main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// import (&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	&amp;#34;example/calc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	&amp;#34;rsc.io/quote&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// )&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// func main() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	fmt.Println(quote.Hello())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 	fmt.Println(calc.Add(10, 3))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Go Modules 就类似于 Java 中的 Maven，做一个项目中的包管理&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>团队聚餐有感</title><link>https://hugh-zhan9.github.io/posts/%E5%9B%A2%E9%98%9F%E8%81%9A%E9%A4%90%E6%9C%89%E6%84%9F/</link><pubDate>Tue, 29 Oct 2024 22:34:53 +0800</pubDate><guid>https://hugh-zhan9.github.io/posts/%E5%9B%A2%E9%98%9F%E8%81%9A%E9%A4%90%E6%9C%89%E6%84%9F/</guid><description>&lt;p>团队聚餐，leader说了很多，总感觉触动很多，但是又有些模糊，很虚无，抓不到根本。&lt;/p>
&lt;p>问了一个直击灵魂的话，在这里一年多了，你感觉自己有成长吗。&lt;/p>
&lt;p>一时语塞，高职级同事回复到，技术上没有，业务上有，但是扪心自问，自己好像业务和技术上都没有很大的进步，甚至可以说是没有，比如最近做的GCRM改造，完全就是苦力，但是有的同事可以做出各种组件，我却只是完成任务，然后做一些别的事情，效率也不算高，bug率也不低，似乎做的所有事情都没有通过大脑的思考，已经变成码代码的行尸走肉，不会分析需求，不会抽象模型，思考的不全面，业务知识不进脑子。&lt;/p>
&lt;p>究竟什么是技术？&lt;/p>
&lt;p>简单的使用，却没有融会贯通，不知道为什么要这样，做不到知其然知其所以然，一旦深挖就变得哑口无言。是不是应该深挖技术，做一些改变，生活中遇到的痛点，作为一个开发者应该尝试着去解决这些痛点。 就像Why所说的，源码之下无秘密，工作这么多年，确实没有深入，学习能力也在退步，需要做一些改变呀。&lt;/p></description></item><item><title>序</title><link>https://hugh-zhan9.github.io/posts/%E5%BA%8F/</link><pubDate>Fri, 25 Oct 2024 21:39:53 +0800</pubDate><guid>https://hugh-zhan9.github.io/posts/%E5%BA%8F/</guid><description>&lt;p>这是今年的第一篇博客，也算是这么多年的第一篇正式写的博客，可能文笔会显的较为稚嫩，但是我想要以后能这么坚持写下去。&lt;/p>
&lt;p>2024 年上半年乃至到 10 月都是很不顺的一年，很多悲伤很多无奈。但是我想会越来越好，至少心存期待才会来日花开。&lt;/p>
&lt;p>本来顺利的备孕，被不知原因的胎停的打断，内心的憧憬、激动和担忧也在此刻戛然而止，取而代之的是悲伤自责。后来做了检查也可能佐证了确实是因为我的原因，更令我后悔不已，让老婆无端遭受了这么多的痛苦，那段时间的她遭受了很大的心灵和身体上的摧残。&lt;/p>
&lt;p>随之而来的暑假，更是导致老婆的心理不顺畅，日复一日的加班，即使她在家里我却不能陪她出去走走，不能陪她缓解焦虑，让她呆在那小小的阴暗的租房里，以至于她觉得这个暑假是一个不开心的经历，是一个致郁的体验。工作的性质也让她格外担心稳定性。感觉自己很难给她安全感。也许我自己也这么觉得，所以我很害怕她说这些，这个暑假真的太糟糕了。&lt;/p>
&lt;p>今天也是不开心的，早在周二就答应了周末回家陪她，周五却因为各种原因变了卦，我很讨厌这种感觉，行为。我不想对她的承诺变得随便，我想说到就一定去做到，哪怕千难万险。&lt;/p>
&lt;p>想要行动起来，改变这些不开心的事情，身体变差了就努力锻炼恢复，工作不好就换一个，行动起来比什么都重要，人生还有那么久，不走到最后一刻，谁也不知道下一秒会发生什么，所以努力、坚持、活在当下。&lt;/p>
&lt;p>&lt;img src="http://ipv4.zhangyk.space:9089/pic/2024/10/25/671ba2535e144.jpg" alt="">&lt;/p></description></item></channel></rss>